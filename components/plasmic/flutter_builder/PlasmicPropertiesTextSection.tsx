/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 14Poat1Xo2MFaa35ZoCnqd
// Component: w5E5J13JYc7t

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import PropertiesTextfield from "../../PropertiesTextfield"; // plasmic-import: iS68sQYkDEs4/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 14Poat1Xo2MFaa35ZoCnqd/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 14Poat1Xo2MFaa35ZoCnqd/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 14Poat1Xo2MFaa35ZoCnqd/projectcss
import sty from "./PlasmicPropertiesTextSection.module.css"; // plasmic-import: w5E5J13JYc7t/css

import InfoCircleIcon from "./icons/PlasmicIcon__InfoCircle"; // plasmic-import: 1xGEf6lNVKha/icon
import Frame22Icon from "./icons/PlasmicIcon__Frame22"; // plasmic-import: qgCkJkTaOlFc/icon
import Frame74Icon from "./icons/PlasmicIcon__Frame74"; // plasmic-import: xtFLfmJo71iz/icon
import TextalignLeftIcon from "./icons/PlasmicIcon__TextalignLeft"; // plasmic-import: eYIU5nicVU3k/icon
import TextalignCenterIcon from "./icons/PlasmicIcon__TextalignCenter"; // plasmic-import: MkX3tnDl63_o/icon
import TextalignRightIcon from "./icons/PlasmicIcon__TextalignRight"; // plasmic-import: 01zPYYfgFEm2/icon
import Frame75Icon from "./icons/PlasmicIcon__Frame75"; // plasmic-import: jkuBOT_wY2r1/icon

createPlasmicElementProxy;

export type PlasmicPropertiesTextSection__VariantMembers = {};
export type PlasmicPropertiesTextSection__VariantsArgs = {};
type VariantPropType = keyof PlasmicPropertiesTextSection__VariantsArgs;
export const PlasmicPropertiesTextSection__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPropertiesTextSection__ArgsType = {};
type ArgPropType = keyof PlasmicPropertiesTextSection__ArgsType;
export const PlasmicPropertiesTextSection__ArgProps = new Array<ArgPropType>();

export type PlasmicPropertiesTextSection__OverridesType = {
  frame150?: Flex__<"div">;
  frame117?: Flex__<"div">;
  frame118?: Flex__<"div">;
  infoCircle3?: Flex__<"div">;
  vuesaxOutlineInfoCircle3?: Flex__<"div">;
  frame119?: Flex__<"div">;
  frame120?: Flex__<"div">;
  frame137?: Flex__<"div">;
  frame121?: Flex__<"div">;
  frame123?: Flex__<"div">;
  frame124?: Flex__<"div">;
  frame126?: Flex__<"div">;
  frame127?: Flex__<"div">;
  rectangle9?: Flex__<"div">;
  frame128?: Flex__<"div">;
  frame142?: Flex__<"div">;
  frame134?: Flex__<"div">;
  vuesaxOutlineTextalignLeft2?: Flex__<"div">;
  frame146?: Flex__<"div">;
  textalignCenter2?: Flex__<"div">;
  vuesaxOutlineTextalignCenter2?: Flex__<"div">;
  frame147?: Flex__<"div">;
  textalignRight2?: Flex__<"div">;
  vuesaxOutlineTextalignRight2?: Flex__<"div">;
  frame141?: Flex__<"div">;
  frame129?: Flex__<"div">;
  frame140?: Flex__<"div">;
  frame130?: Flex__<"div">;
  vuesaxOutlineTextalignLeft?: Flex__<"div">;
  frame138?: Flex__<"div">;
  textalignCenter?: Flex__<"div">;
  vuesaxOutlineTextalignCenter?: Flex__<"div">;
  frame143?: Flex__<"div">;
  textalignRight?: Flex__<"div">;
  vuesaxOutlineTextalignRight?: Flex__<"div">;
  frame131?: Flex__<"div">;
  frame144?: Flex__<"div">;
  frame133?: Flex__<"div">;
  frame145?: Flex__<"div">;
  frame152?: Flex__<"div">;
  rectangle3162?: Flex__<"div">;
  frame153?: Flex__<"div">;
  rectangle3163?: Flex__<"div">;
  rectangle10?: Flex__<"div">;
};

export interface DefaultPropertiesTextSectionProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPropertiesTextSection__RenderFunc(props: {
  variants: PlasmicPropertiesTextSection__VariantsArgs;
  args: PlasmicPropertiesTextSection__ArgsType;
  overrides: PlasmicPropertiesTextSection__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"frame150"}
      data-plasmic-override={overrides.frame150}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.frame150
      )}
    >
      <div
        data-plasmic-name={"frame117"}
        data-plasmic-override={overrides.frame117}
        className={classNames(projectcss.all, sty.frame117)}
      >
        <div
          data-plasmic-name={"frame118"}
          data-plasmic-override={overrides.frame118}
          className={classNames(projectcss.all, sty.frame118)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___27BCv
            )}
          >
            {"Text properties"}
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__t7Qv)}>
            <div
              data-plasmic-name={"infoCircle3"}
              data-plasmic-override={overrides.infoCircle3}
              className={classNames(projectcss.all, sty.infoCircle3)}
            >
              <div
                data-plasmic-name={"vuesaxOutlineInfoCircle3"}
                data-plasmic-override={overrides.vuesaxOutlineInfoCircle3}
                className={classNames(
                  projectcss.all,
                  sty.vuesaxOutlineInfoCircle3
                )}
              >
                <InfoCircleIcon
                  className={classNames(projectcss.all, sty.svg__dUsFf)}
                  role={"img"}
                />
              </div>
            </div>
          </div>
        </div>
        <div
          data-plasmic-name={"frame119"}
          data-plasmic-override={overrides.frame119}
          className={classNames(projectcss.all, sty.frame119)}
        >
          <div
            data-plasmic-name={"frame120"}
            data-plasmic-override={overrides.frame120}
            className={classNames(projectcss.all, sty.frame120)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kgYDl
              )}
            >
              {"Poppins"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__n59Ft)}>
              <Frame22Icon
                className={classNames(projectcss.all, sty.svg__gPbgp)}
                role={"img"}
              />
            </div>
          </div>
          <div
            data-plasmic-name={"frame137"}
            data-plasmic-override={overrides.frame137}
            className={classNames(projectcss.all, sty.frame137)}
          >
            <div
              data-plasmic-name={"frame121"}
              data-plasmic-override={overrides.frame121}
              className={classNames(projectcss.all, sty.frame121)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7X7Be
                )}
              >
                {"Medium"}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__lvDo)}>
                <Frame22Icon
                  className={classNames(projectcss.all, sty.svg__njoif)}
                  role={"img"}
                />
              </div>
            </div>
            <PropertiesTextfield
              className={classNames(
                "__wab_instance",
                sty.propertiesTextfield__uOYmR
              )}
              withoutIcon={true}
            >
              <Frame74Icon
                className={classNames(projectcss.all, sty.svg__ylvl9)}
                role={"img"}
              />
            </PropertiesTextfield>
          </div>
          <div
            data-plasmic-name={"frame123"}
            data-plasmic-override={overrides.frame123}
            className={classNames(projectcss.all, sty.frame123)}
          >
            <div
              data-plasmic-name={"frame124"}
              data-plasmic-override={overrides.frame124}
              className={classNames(projectcss.all, sty.frame124)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vVb6D
                )}
              >
                {"Color"}
              </div>
              <div
                data-plasmic-name={"frame126"}
                data-plasmic-override={overrides.frame126}
                className={classNames(projectcss.all, sty.frame126)}
              >
                <div
                  data-plasmic-name={"frame127"}
                  data-plasmic-override={overrides.frame127}
                  className={classNames(projectcss.all, sty.frame127)}
                >
                  <div
                    data-plasmic-name={"rectangle9"}
                    data-plasmic-override={overrides.rectangle9}
                    className={classNames(projectcss.all, sty.rectangle9)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__acCgO
                    )}
                  >
                    {"2AC2DC"}
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"frame128"}
              data-plasmic-override={overrides.frame128}
              className={classNames(projectcss.all, sty.frame128)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6R7Sn
                )}
              >
                {"Styling"}
              </div>
              <div
                data-plasmic-name={"frame142"}
                data-plasmic-override={overrides.frame142}
                className={classNames(projectcss.all, sty.frame142)}
              >
                <div
                  data-plasmic-name={"frame134"}
                  data-plasmic-override={overrides.frame134}
                  className={classNames(projectcss.all, sty.frame134)}
                >
                  <div
                    data-plasmic-name={"vuesaxOutlineTextalignLeft2"}
                    data-plasmic-override={
                      overrides.vuesaxOutlineTextalignLeft2
                    }
                    className={classNames(
                      projectcss.all,
                      sty.vuesaxOutlineTextalignLeft2
                    )}
                  >
                    <TextalignLeftIcon
                      className={classNames(projectcss.all, sty.svg___2JVhj)}
                      role={"img"}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"frame146"}
                  data-plasmic-override={overrides.frame146}
                  className={classNames(projectcss.all, sty.frame146)}
                >
                  <div
                    data-plasmic-name={"textalignCenter2"}
                    data-plasmic-override={overrides.textalignCenter2}
                    className={classNames(projectcss.all, sty.textalignCenter2)}
                  >
                    <div
                      data-plasmic-name={"vuesaxOutlineTextalignCenter2"}
                      data-plasmic-override={
                        overrides.vuesaxOutlineTextalignCenter2
                      }
                      className={classNames(
                        projectcss.all,
                        sty.vuesaxOutlineTextalignCenter2
                      )}
                    >
                      <TextalignCenterIcon
                        className={classNames(projectcss.all, sty.svg___6JBfX)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"frame147"}
                  data-plasmic-override={overrides.frame147}
                  className={classNames(projectcss.all, sty.frame147)}
                >
                  <div
                    data-plasmic-name={"textalignRight2"}
                    data-plasmic-override={overrides.textalignRight2}
                    className={classNames(projectcss.all, sty.textalignRight2)}
                  >
                    <div
                      data-plasmic-name={"vuesaxOutlineTextalignRight2"}
                      data-plasmic-override={
                        overrides.vuesaxOutlineTextalignRight2
                      }
                      className={classNames(
                        projectcss.all,
                        sty.vuesaxOutlineTextalignRight2
                      )}
                    >
                      <TextalignRightIcon
                        className={classNames(projectcss.all, sty.svg__cwenh)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"frame141"}
            data-plasmic-override={overrides.frame141}
            className={classNames(projectcss.all, sty.frame141)}
          >
            <div
              data-plasmic-name={"frame129"}
              data-plasmic-override={overrides.frame129}
              className={classNames(projectcss.all, sty.frame129)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kzHy
                )}
              >
                {"Text Align"}
              </div>
              <div
                data-plasmic-name={"frame140"}
                data-plasmic-override={overrides.frame140}
                className={classNames(projectcss.all, sty.frame140)}
              >
                <div
                  data-plasmic-name={"frame130"}
                  data-plasmic-override={overrides.frame130}
                  className={classNames(projectcss.all, sty.frame130)}
                >
                  <div
                    data-plasmic-name={"vuesaxOutlineTextalignLeft"}
                    data-plasmic-override={overrides.vuesaxOutlineTextalignLeft}
                    className={classNames(
                      projectcss.all,
                      sty.vuesaxOutlineTextalignLeft
                    )}
                  >
                    <TextalignLeftIcon
                      className={classNames(projectcss.all, sty.svg__jsnFs)}
                      role={"img"}
                    />
                  </div>
                </div>
                <div
                  data-plasmic-name={"frame138"}
                  data-plasmic-override={overrides.frame138}
                  className={classNames(projectcss.all, sty.frame138)}
                >
                  <div
                    data-plasmic-name={"textalignCenter"}
                    data-plasmic-override={overrides.textalignCenter}
                    className={classNames(projectcss.all, sty.textalignCenter)}
                  >
                    <div
                      data-plasmic-name={"vuesaxOutlineTextalignCenter"}
                      data-plasmic-override={
                        overrides.vuesaxOutlineTextalignCenter
                      }
                      className={classNames(
                        projectcss.all,
                        sty.vuesaxOutlineTextalignCenter
                      )}
                    >
                      <TextalignCenterIcon
                        className={classNames(projectcss.all, sty.svg__yia1A)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"frame143"}
                  data-plasmic-override={overrides.frame143}
                  className={classNames(projectcss.all, sty.frame143)}
                >
                  <div
                    data-plasmic-name={"textalignRight"}
                    data-plasmic-override={overrides.textalignRight}
                    className={classNames(projectcss.all, sty.textalignRight)}
                  >
                    <div
                      data-plasmic-name={"vuesaxOutlineTextalignRight"}
                      data-plasmic-override={
                        overrides.vuesaxOutlineTextalignRight
                      }
                      className={classNames(
                        projectcss.all,
                        sty.vuesaxOutlineTextalignRight
                      )}
                    >
                      <TextalignRightIcon
                        className={classNames(projectcss.all, sty.svg__olAhB)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"frame131"}
              data-plasmic-override={overrides.frame131}
              className={classNames(projectcss.all, sty.frame131)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yLfiQ
                )}
              >
                {"Max Line"}
              </div>
              <PropertiesTextfield
                className={classNames(
                  "__wab_instance",
                  sty.propertiesTextfield__grf8H
                )}
                withoutIcon={true}
              >
                <Frame74Icon
                  className={classNames(projectcss.all, sty.svg__myYyV)}
                  role={"img"}
                />
              </PropertiesTextfield>
            </div>
          </div>
          <div
            data-plasmic-name={"frame144"}
            data-plasmic-override={overrides.frame144}
            className={classNames(projectcss.all, sty.frame144)}
          >
            <div
              data-plasmic-name={"frame133"}
              data-plasmic-override={overrides.frame133}
              className={classNames(projectcss.all, sty.frame133)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fzWc5
                )}
              >
                {"Line height"}
              </div>
              <PropertiesTextfield
                className={classNames(
                  "__wab_instance",
                  sty.propertiesTextfield__vJcI
                )}
              >
                <Frame74Icon
                  className={classNames(projectcss.all, sty.svg__lkX3G)}
                  role={"img"}
                />
              </PropertiesTextfield>
            </div>
            <div
              data-plasmic-name={"frame145"}
              data-plasmic-override={overrides.frame145}
              className={classNames(projectcss.all, sty.frame145)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qScC3
                )}
              >
                {"Letter spacing"}
              </div>
              <PropertiesTextfield
                className={classNames(
                  "__wab_instance",
                  sty.propertiesTextfield__pninb
                )}
              >
                <Frame75Icon
                  className={classNames(projectcss.all, sty.svg__p25Yq)}
                  role={"img"}
                />
              </PropertiesTextfield>
            </div>
          </div>
          <div
            data-plasmic-name={"frame152"}
            data-plasmic-override={overrides.frame152}
            className={classNames(projectcss.all, sty.frame152)}
          >
            <div
              data-plasmic-name={"rectangle3162"}
              data-plasmic-override={overrides.rectangle3162}
              className={classNames(projectcss.all, sty.rectangle3162)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___436J6
              )}
            >
              {"Selectable"}
            </div>
          </div>
          <div
            data-plasmic-name={"frame153"}
            data-plasmic-override={overrides.frame153}
            className={classNames(projectcss.all, sty.frame153)}
          >
            <div
              data-plasmic-name={"rectangle3163"}
              data-plasmic-override={overrides.rectangle3163}
              className={classNames(projectcss.all, sty.rectangle3163)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__kn4V
              )}
            >
              {"Auto size"}
            </div>
          </div>
        </div>
      </div>
      <div
        data-plasmic-name={"rectangle10"}
        data-plasmic-override={overrides.rectangle10}
        className={classNames(projectcss.all, sty.rectangle10)}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  frame150: [
    "frame150",
    "frame117",
    "frame118",
    "infoCircle3",
    "vuesaxOutlineInfoCircle3",
    "frame119",
    "frame120",
    "frame137",
    "frame121",
    "frame123",
    "frame124",
    "frame126",
    "frame127",
    "rectangle9",
    "frame128",
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2",
    "frame141",
    "frame129",
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight",
    "frame131",
    "frame144",
    "frame133",
    "frame145",
    "frame152",
    "rectangle3162",
    "frame153",
    "rectangle3163",
    "rectangle10"
  ],
  frame117: [
    "frame117",
    "frame118",
    "infoCircle3",
    "vuesaxOutlineInfoCircle3",
    "frame119",
    "frame120",
    "frame137",
    "frame121",
    "frame123",
    "frame124",
    "frame126",
    "frame127",
    "rectangle9",
    "frame128",
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2",
    "frame141",
    "frame129",
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight",
    "frame131",
    "frame144",
    "frame133",
    "frame145",
    "frame152",
    "rectangle3162",
    "frame153",
    "rectangle3163"
  ],
  frame118: ["frame118", "infoCircle3", "vuesaxOutlineInfoCircle3"],
  infoCircle3: ["infoCircle3", "vuesaxOutlineInfoCircle3"],
  vuesaxOutlineInfoCircle3: ["vuesaxOutlineInfoCircle3"],
  frame119: [
    "frame119",
    "frame120",
    "frame137",
    "frame121",
    "frame123",
    "frame124",
    "frame126",
    "frame127",
    "rectangle9",
    "frame128",
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2",
    "frame141",
    "frame129",
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight",
    "frame131",
    "frame144",
    "frame133",
    "frame145",
    "frame152",
    "rectangle3162",
    "frame153",
    "rectangle3163"
  ],
  frame120: ["frame120"],
  frame137: ["frame137", "frame121"],
  frame121: ["frame121"],
  frame123: [
    "frame123",
    "frame124",
    "frame126",
    "frame127",
    "rectangle9",
    "frame128",
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2"
  ],
  frame124: ["frame124", "frame126", "frame127", "rectangle9"],
  frame126: ["frame126", "frame127", "rectangle9"],
  frame127: ["frame127", "rectangle9"],
  rectangle9: ["rectangle9"],
  frame128: [
    "frame128",
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2"
  ],
  frame142: [
    "frame142",
    "frame134",
    "vuesaxOutlineTextalignLeft2",
    "frame146",
    "textalignCenter2",
    "vuesaxOutlineTextalignCenter2",
    "frame147",
    "textalignRight2",
    "vuesaxOutlineTextalignRight2"
  ],
  frame134: ["frame134", "vuesaxOutlineTextalignLeft2"],
  vuesaxOutlineTextalignLeft2: ["vuesaxOutlineTextalignLeft2"],
  frame146: ["frame146", "textalignCenter2", "vuesaxOutlineTextalignCenter2"],
  textalignCenter2: ["textalignCenter2", "vuesaxOutlineTextalignCenter2"],
  vuesaxOutlineTextalignCenter2: ["vuesaxOutlineTextalignCenter2"],
  frame147: ["frame147", "textalignRight2", "vuesaxOutlineTextalignRight2"],
  textalignRight2: ["textalignRight2", "vuesaxOutlineTextalignRight2"],
  vuesaxOutlineTextalignRight2: ["vuesaxOutlineTextalignRight2"],
  frame141: [
    "frame141",
    "frame129",
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight",
    "frame131"
  ],
  frame129: [
    "frame129",
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight"
  ],
  frame140: [
    "frame140",
    "frame130",
    "vuesaxOutlineTextalignLeft",
    "frame138",
    "textalignCenter",
    "vuesaxOutlineTextalignCenter",
    "frame143",
    "textalignRight",
    "vuesaxOutlineTextalignRight"
  ],
  frame130: ["frame130", "vuesaxOutlineTextalignLeft"],
  vuesaxOutlineTextalignLeft: ["vuesaxOutlineTextalignLeft"],
  frame138: ["frame138", "textalignCenter", "vuesaxOutlineTextalignCenter"],
  textalignCenter: ["textalignCenter", "vuesaxOutlineTextalignCenter"],
  vuesaxOutlineTextalignCenter: ["vuesaxOutlineTextalignCenter"],
  frame143: ["frame143", "textalignRight", "vuesaxOutlineTextalignRight"],
  textalignRight: ["textalignRight", "vuesaxOutlineTextalignRight"],
  vuesaxOutlineTextalignRight: ["vuesaxOutlineTextalignRight"],
  frame131: ["frame131"],
  frame144: ["frame144", "frame133", "frame145"],
  frame133: ["frame133"],
  frame145: ["frame145"],
  frame152: ["frame152", "rectangle3162"],
  rectangle3162: ["rectangle3162"],
  frame153: ["frame153", "rectangle3163"],
  rectangle3163: ["rectangle3163"],
  rectangle10: ["rectangle10"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  frame150: "div";
  frame117: "div";
  frame118: "div";
  infoCircle3: "div";
  vuesaxOutlineInfoCircle3: "div";
  frame119: "div";
  frame120: "div";
  frame137: "div";
  frame121: "div";
  frame123: "div";
  frame124: "div";
  frame126: "div";
  frame127: "div";
  rectangle9: "div";
  frame128: "div";
  frame142: "div";
  frame134: "div";
  vuesaxOutlineTextalignLeft2: "div";
  frame146: "div";
  textalignCenter2: "div";
  vuesaxOutlineTextalignCenter2: "div";
  frame147: "div";
  textalignRight2: "div";
  vuesaxOutlineTextalignRight2: "div";
  frame141: "div";
  frame129: "div";
  frame140: "div";
  frame130: "div";
  vuesaxOutlineTextalignLeft: "div";
  frame138: "div";
  textalignCenter: "div";
  vuesaxOutlineTextalignCenter: "div";
  frame143: "div";
  textalignRight: "div";
  vuesaxOutlineTextalignRight: "div";
  frame131: "div";
  frame144: "div";
  frame133: "div";
  frame145: "div";
  frame152: "div";
  rectangle3162: "div";
  frame153: "div";
  rectangle3163: "div";
  rectangle10: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPropertiesTextSection__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPropertiesTextSection__VariantsArgs;
    args?: PlasmicPropertiesTextSection__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPropertiesTextSection__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPropertiesTextSection__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPropertiesTextSection__ArgProps,
          internalVariantPropNames: PlasmicPropertiesTextSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPropertiesTextSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "frame150") {
    func.displayName = "PlasmicPropertiesTextSection";
  } else {
    func.displayName = `PlasmicPropertiesTextSection.${nodeName}`;
  }
  return func;
}

export const PlasmicPropertiesTextSection = Object.assign(
  // Top-level PlasmicPropertiesTextSection renders the root element
  makeNodeComponent("frame150"),
  {
    // Helper components rendering sub-elements
    frame117: makeNodeComponent("frame117"),
    frame118: makeNodeComponent("frame118"),
    infoCircle3: makeNodeComponent("infoCircle3"),
    vuesaxOutlineInfoCircle3: makeNodeComponent("vuesaxOutlineInfoCircle3"),
    frame119: makeNodeComponent("frame119"),
    frame120: makeNodeComponent("frame120"),
    frame137: makeNodeComponent("frame137"),
    frame121: makeNodeComponent("frame121"),
    frame123: makeNodeComponent("frame123"),
    frame124: makeNodeComponent("frame124"),
    frame126: makeNodeComponent("frame126"),
    frame127: makeNodeComponent("frame127"),
    rectangle9: makeNodeComponent("rectangle9"),
    frame128: makeNodeComponent("frame128"),
    frame142: makeNodeComponent("frame142"),
    frame134: makeNodeComponent("frame134"),
    vuesaxOutlineTextalignLeft2: makeNodeComponent(
      "vuesaxOutlineTextalignLeft2"
    ),
    frame146: makeNodeComponent("frame146"),
    textalignCenter2: makeNodeComponent("textalignCenter2"),
    vuesaxOutlineTextalignCenter2: makeNodeComponent(
      "vuesaxOutlineTextalignCenter2"
    ),
    frame147: makeNodeComponent("frame147"),
    textalignRight2: makeNodeComponent("textalignRight2"),
    vuesaxOutlineTextalignRight2: makeNodeComponent(
      "vuesaxOutlineTextalignRight2"
    ),
    frame141: makeNodeComponent("frame141"),
    frame129: makeNodeComponent("frame129"),
    frame140: makeNodeComponent("frame140"),
    frame130: makeNodeComponent("frame130"),
    vuesaxOutlineTextalignLeft: makeNodeComponent("vuesaxOutlineTextalignLeft"),
    frame138: makeNodeComponent("frame138"),
    textalignCenter: makeNodeComponent("textalignCenter"),
    vuesaxOutlineTextalignCenter: makeNodeComponent(
      "vuesaxOutlineTextalignCenter"
    ),
    frame143: makeNodeComponent("frame143"),
    textalignRight: makeNodeComponent("textalignRight"),
    vuesaxOutlineTextalignRight: makeNodeComponent(
      "vuesaxOutlineTextalignRight"
    ),
    frame131: makeNodeComponent("frame131"),
    frame144: makeNodeComponent("frame144"),
    frame133: makeNodeComponent("frame133"),
    frame145: makeNodeComponent("frame145"),
    frame152: makeNodeComponent("frame152"),
    rectangle3162: makeNodeComponent("rectangle3162"),
    frame153: makeNodeComponent("frame153"),
    rectangle3163: makeNodeComponent("rectangle3163"),
    rectangle10: makeNodeComponent("rectangle10"),

    // Metadata about props expected for PlasmicPropertiesTextSection
    internalVariantProps: PlasmicPropertiesTextSection__VariantProps,
    internalArgProps: PlasmicPropertiesTextSection__ArgProps
  }
);

export default PlasmicPropertiesTextSection;
/* prettier-ignore-end */
