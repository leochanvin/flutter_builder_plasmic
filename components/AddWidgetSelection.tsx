// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import * as React from "react";
import {
  PlasmicAddWidgetSelection,
  DefaultAddWidgetSelectionProps
} from "./plasmic/flutter_builder/PlasmicAddWidgetSelection";
import WidgetItem from "./WidgetItem";
import { RowEmpty } from "../lib/dsl/presets/row";
import { ColumnEmpty } from "../lib/dsl/presets/column";
import { ContainerEmpty } from "../lib/dsl/presets/container";
import { TextCalendrier } from "../lib/dsl/presets/text";
import { HTMLElementRefOf } from "@plasmicapp/react-web";

// Your component props start with props for variants and slots you defined
// in Plasmic, but you can add more here, like event handlers that you can
// attach to named nodes in your component.
//
// If you don't want to expose certain variants or slots as a prop, you can use
// Omit to hide them:
//
// interface AddWidgetSelectionProps extends Omit<DefaultAddWidgetSelectionProps, "hideProps1"|"hideProp2"> {
//   // etc.
// }
//
// You can also stop extending from DefaultAddWidgetSelectionProps altogether and have
// total control over the props for your component.
export interface AddWidgetSelectionProps
  extends DefaultAddWidgetSelectionProps {
  onSelectFromDsl?: (widget: any) => void;
}

function AddWidgetSelection_(
  props: AddWidgetSelectionProps,
  ref: HTMLElementRefOf<"div">
) {
  // Use PlasmicAddWidgetSelection to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicAddWidgetSelection are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, we are just piping all AddWidgetSelectionProps here, but feel free
  // to do whatever works for you.

  const { onSelectFromDsl, ...rest } = props;
  const presets = [TextCalendrier, RowEmpty, ColumnEmpty, ContainerEmpty];
  return (
    <PlasmicAddWidgetSelection
      frame127={{ ref }}
      {...rest}
      overrides={{
        frame132: {
          render: () => (
            <div style={{ display: "flex", flexDirection: "column", gap: 8 }}>
              {presets.map((p) => (
                <div key={p.uid} style={{ cursor: "pointer" }} onClick={() => { console.log("[AddWidgetSelection] click preset", p); onSelectFromDsl?.(p); }}>
                  <WidgetItem name={p} />
                </div>
              ))}
            </div>
          )
        }
      }}
    />
  );
}

const AddWidgetSelection = React.forwardRef(AddWidgetSelection_);
export default AddWidgetSelection;
